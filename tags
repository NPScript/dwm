!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/nathanreiner/Dokumente/C/Suckless/dwm/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20210905.0/
${OBJ}	Makefile	/^${OBJ}: config.h config.mk$/;"	t
-1018,12 +1088,13	patches/swallow-20201211.diff	/^@@ -1018,12 +1088,13 @@ killclient(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-103,7 +103,9	patches/dwm-statuscmd-signal-6.2.diff	/^@@ -103,7 +103,9 @@ static Button buttons[] = {$/;"	h	modifiedFile:a/config.def.h
-1038,6 +1109,7	patches/swallow-20201211.diff	/^@@ -1038,6 +1109,7 @@ manage(Window w, XWindowAttributes *wa)$/;"	h	modifiedFile:a/dwm.c
-1074,6 +1146,8	patches/swallow-20201211.diff	/^@@ -1074,6 +1146,8 @@ manage(Window w, XWindowAttributes *wa)$/;"	h	modifiedFile:a/dwm.c
-119,6 +119,7	patches/dwm-fullgaps-20200508.diff	/^@@ -119,6 +119,7 @@ struct Monitor {$/;"	h	modifiedFile:a/dwm.c
-138,6 +146,8	patches/swallow-20201211.diff	/^@@ -138,6 +146,8 @@ typedef struct {$/;"	h	modifiedFile:a/dwm.c
-140,6 +140,16	patches/dwm-fullgaps-20200508.diff	/^@@ -140,6 +140,16 @@ View all windows with any tag.$/;"	h	modifiedFile:a/dwm.1
-1498,6 +1501,16	patches/dwm-fullgaps-20200508.diff	/^@@ -1498,6 +1501,16 @@ setfullscreen(Client *c, int fullscreen)$/;"	h	modifiedFile:a/dwm.c
-1548,6 +1550,9	patches/dwm-barpadding-20200720.diff	/^@@ -1548,6 +1550,9 @@ setup(void)$/;"	h	modifiedFile:a/dwm.c
-156,6 +156,7	patches/dwm-statuscmd-signal-6.2.diff	/^@@ -156,6 +156,7 @@ static void clientmessage(XEvent *e);$/;"	h	modifiedFile:a/dwm.c
-1574,6 +1579,7	patches/dwm-barpadding-20200720.diff	/^@@ -1574,6 +1579,7 @@ setup(void)$/;"	h	modifiedFile:a/dwm.c
-1636,6 +1684,23	patches/dwm-statuscmd-signal-6.2.diff	/^@@ -1636,6 +1684,23 @@ sigchld(int unused)$/;"	h	modifiedFile:a/dwm.c
-1684,18 +1697,18	patches/dwm-fullgaps-20200508.diff	/^@@ -1684,18 +1697,18 @@ tile(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-169,6 +170,7	patches/dwm-statuscmd-signal-6.2.diff	/^@@ -169,6 +170,7 @@ static void focus(Client *c);$/;"	h	modifiedFile:a/dwm.c
-1703,7 +1703,7	patches/dwm-gaps-6.0.diff	/^@@ -1703,7 +1703,7 @@ textnw(const char *text, unsigned int len) {$/;"	h	modifiedFile:a/dwm.c
-1704,7 +1710,7	patches/dwm-barpadding-20200720.diff	/^@@ -1704,7 +1710,7 @@ togglebar(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1711,19 +1711,21	patches/dwm-gaps-6.0.diff	/^@@ -1711,19 +1711,21 @@ tile(Monitor *m) {$/;"	h	modifiedFile:a/dwm.c
-1768,6 +1842,20	patches/swallow-20201211.diff	/^@@ -1768,6 +1842,20 @@ unmanage(Client *c, int destroyed)$/;"	h	modifiedFile:a/dwm.c
-1782,9 +1870,12	patches/swallow-20201211.diff	/^@@ -1782,9 +1870,12 @@ unmanage(Client *c, int destroyed)$/;"	h	modifiedFile:a/dwm.c
-1814,7 +1820,7	patches/dwm-barpadding-20200720.diff	/^@@ -1814,7 +1820,7 @@ updatebars(void)$/;"	h	modifiedFile:a/dwm.c
-1829,11 +1835,11	patches/dwm-barpadding-20200720.diff	/^@@ -1829,11 +1835,11 @@ updatebarpos(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-19,10 +19,11	patches/swallow-20201211.diff	/^@@ -19,10 +19,11 @@ FREETYPELIBS = -lfontconfig -lXft$/;"	h	modifiedFile:a/config.mk
-1987,8 +2052,10	patches/dwm-statuscmd-signal-6.2.diff	/^@@ -1987,8 +2052,10 @@ updatesizehints(Client *c)$/;"	h	modifiedFile:a/dwm.c
-2,6 +2,7	patches/dwm-fullgaps-20200508.diff	/^@@ -2,6 +2,7 @@$/;"	h	modifiedFile:a/config.def.h
-200,6 +201,7	patches/dwm-fullgaps-20200508.diff	/^@@ -200,6 +201,7 @@ static void sendmon(Client *c, Monitor *m);$/;"	h	modifiedFile:a/dwm.c
-2047,6 +2138,136	patches/swallow-20201211.diff	/^@@ -2047,6 +2138,136 @@ view(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-205,6 +207,7	patches/dwm-statuscmd-signal-6.2.diff	/^@@ -205,6 +207,7 @@ static void setup(void);$/;"	h	modifiedFile:a/dwm.c
-2138,10 +2359,12	patches/swallow-20201211.diff	/^@@ -2138,10 +2359,12 @@ main(int argc, char *argv[])$/;"	h	modifiedFile:a/dwm.c
-2138,3 +2140,106	patches/dwm-centeredmaster-200160719.diff	/^@@ -2138,3 +2140,106 @@ main(int argc, char *argv[])$/;"	h	modifiedFile:a/dwm.c
-234,6 +234,8	patches/dwm-centeredmaster-200160719.diff	/^@@ -234,6 +234,8 @@ static int xerror(Display *dpy, XErrorEvent *ee);$/;"	h	modifiedFile:a/dwm.c
-235,6 +245,12	patches/swallow-20201211.diff	/^@@ -235,6 +245,12 @@ static int xerrordummy(Display *dpy, XErrorEvent *ee);$/;"	h	modifiedFile:a/dwm.c
-237,6 +240,9	patches/dwm-statuscmd-signal-6.2.diff	/^@@ -237,6 +240,9 @@ static void zoom(const Arg *arg);$/;"	h	modifiedFile:a/dwm.c
-242,6 +242,8	patches/dwm-barpadding-20200720.diff	/^@@ -242,6 +242,8 @@ static int screen;$/;"	h	modifiedFile:a/dwm.c
-26,9 +27,11	patches/swallow-20201211.diff	/^@@ -26,9 +27,11 @@ static const Rule rules[] = {$/;"	h	modifiedFile:a/config.def.h
-269,6 +285,8	patches/swallow-20201211.diff	/^@@ -269,6 +285,8 @@ static Drw *drw;$/;"	h	modifiedFile:a/dwm.c
-298,6 +316,8	patches/swallow-20201211.diff	/^@@ -298,6 +316,8 @@ applyrules(Client *c)$/;"	h	modifiedFile:a/dwm.c
-3,6 +3,7	patches/swallow-20201211.diff	/^@@ -3,6 +3,7 @@$/;"	h	modifiedFile:a/config.def.h
-40,6 +40,12	patches/swallow-20201211.diff	/^@@ -40,6 +40,12 @@$/;"	h	modifiedFile:a/dwm.c
-41,6 +41,8	patches/dwm-centeredmaster-200160719.diff	/^@@ -41,6 +41,8 @@ static const Layout layouts[] = {$/;"	h	modifiedFile:a/config.def.h
-414,6 +434,53	patches/swallow-20201211.diff	/^@@ -414,6 +434,53 @@ attachstack(Client *c)$/;"	h	modifiedFile:a/dwm.c
-439,9 +445,26	patches/dwm-statuscmd-signal-6.2.diff	/^@@ -439,9 +445,26 @@ buttonpress(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-5,6 +5,8	patches/dwm-barpadding-20200720.diff	/^@@ -5,6 +5,8 @@ static const unsigned int borderpx  = 1;        \/* border pixel of windows *\/$/;"	h	modifiedFile:a/config.def.h
-568,7 +570,7	patches/dwm-barpadding-20200720.diff	/^@@ -568,7 +570,7 @@ configurenotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-627,6 +650,19	patches/dwm-statuscmd-signal-6.2.diff	/^@@ -627,6 +650,19 @@ configurerequest(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-639,6 +641,7	patches/dwm-fullgaps-20200508.diff	/^@@ -639,6 +641,7 @@ createmon(void)$/;"	h	modifiedFile:a/dwm.c
-653,6 +720,9	patches/swallow-20201211.diff	/^@@ -653,6 +720,9 @@ destroynotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-706,7 +708,7	patches/dwm-barpadding-20200720.diff	/^@@ -706,7 +708,7 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-732,12 +734,12	patches/dwm-barpadding-20200720.diff	/^@@ -732,12 +734,12 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-76,6 +78,8	patches/dwm-centeredmaster-200160719.diff	/^@@ -76,6 +78,8 @@ static Key keys[] = {$/;"	h	modifiedFile:a/config.def.h
-84,6 +85,9	patches/dwm-fullgaps-20200508.diff	/^@@ -84,6 +85,9 @@ static Key keys[] = {$/;"	h	modifiedFile:a/config.def.h
-871,6 +907,18	patches/dwm-statuscmd-signal-6.2.diff	/^@@ -871,6 +907,18 @@ getatomprop(Client *c, Atom prop)$/;"	h	modifiedFile:a/dwm.c
-9,6 +9,7	patches/dwm-gaps-6.0.diff	/^@@ -9,6 +9,7 @@ static const char selbordercolor[]  = "#005577";$/;"	h	modifiedFile:a/config.def.h
-92,9 +98,11	patches/swallow-20201211.diff	/^@@ -92,9 +98,11 @@ struct Client {$/;"	h	modifiedFile:a/dwm.c
.c.o	Makefile	/^.c.o:$/;"	t
Arg	dwm.c	/^} Arg;$/;"	t	typeref:union:__anon0f53a99e060a	file:
BETWEEN	util.h	/^#define BETWEEN(/;"	d	signature:(X,A,B)
BUGS	dwm.1	/^.SH BUGS$/;"	s	title:DWM
BUTTONMASK	dwm.c	/^#define BUTTONMASK /;"	d	file:
Button	dwm.c	/^} Button;$/;"	t	typeref:struct:__anon0f53a99e0708	file:
CC	config.mk	/^CC = cc$/;"	m
CFLAGS	config.mk	/^CFLAGS   = -std=c99 -pedantic -Wall -Wno-deprecated-declarations -Os ${INCS} ${CPPFLAGS}$/;"	m
CLEANMASK	dwm.c	/^#define CLEANMASK(/;"	d	file:	signature:(mask)
CPPFLAGS	config.mk	/^CPPFLAGS = -D_DEFAULT_SOURCE -D_BSD_SOURCE -D_POSIX_C_SOURCE=200809L -DVERSION=\\"${VERSION}\\" /;"	m
CUSTOMIZATION	dwm.1	/^.SH CUSTOMIZATION$/;"	s	title:DWM
Client	dwm.c	/^struct Client {$/;"	s	file:
Client	dwm.c	/^typedef struct Client Client;$/;"	t	typeref:struct:Client	file:
Client::baseh	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
Client::basew	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
Client::bw	dwm.c	/^	int bw, oldbw;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
Client::h	dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
Client::inch	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
Client::incw	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
Client::isfixed	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
Client::isfloating	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
Client::isfullscreen	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
Client::isterminal	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
Client::isurgent	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
Client::maxa	dwm.c	/^	float mina, maxa;$/;"	m	struct:Client	typeref:typename:float	file:	access:public
Client::maxh	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
Client::maxw	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
Client::mina	dwm.c	/^	float mina, maxa;$/;"	m	struct:Client	typeref:typename:float	file:	access:public
Client::minh	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
Client::minw	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
Client::mon	dwm.c	/^	Monitor *mon;$/;"	m	struct:Client	typeref:typename:Monitor *	file:	access:public
Client::name	dwm.c	/^	char name[256];$/;"	m	struct:Client	typeref:typename:char[256]	file:	access:public
Client::neverfocus	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
Client::next	dwm.c	/^	Client *next;$/;"	m	struct:Client	typeref:typename:Client *	file:	access:public
Client::noswallow	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
Client::oldbw	dwm.c	/^	int bw, oldbw;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
Client::oldh	dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
Client::oldstate	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
Client::oldw	dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
Client::oldx	dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
Client::oldy	dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
Client::pid	dwm.c	/^	pid_t pid;$/;"	m	struct:Client	typeref:typename:pid_t	file:	access:public
Client::snext	dwm.c	/^	Client *snext;$/;"	m	struct:Client	typeref:typename:Client *	file:	access:public
Client::swallowing	dwm.c	/^	Client *swallowing;$/;"	m	struct:Client	typeref:typename:Client *	file:	access:public
Client::tags	dwm.c	/^	unsigned int tags;$/;"	m	struct:Client	typeref:typename:unsigned int	file:	access:public
Client::w	dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
Client::win	dwm.c	/^	Window win;$/;"	m	struct:Client	typeref:typename:Window	file:	access:public
Client::x	dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
Client::y	dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
ClkClientWin	dwm.c	/^       ClkClientWin, ClkRootWin, ClkLast }; \/* clicks *\/$/;"	e	enum:__anon0f53a99e0503	file:	access:public
ClkLast	dwm.c	/^       ClkClientWin, ClkRootWin, ClkLast }; \/* clicks *\/$/;"	e	enum:__anon0f53a99e0503	file:	access:public
ClkLtSymbol	dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anon0f53a99e0503	file:	access:public
ClkRootWin	dwm.c	/^       ClkClientWin, ClkRootWin, ClkLast }; \/* clicks *\/$/;"	e	enum:__anon0f53a99e0503	file:	access:public
ClkStatusText	dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anon0f53a99e0503	file:	access:public
ClkTagBar	dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anon0f53a99e0503	file:	access:public
ClkWinTitle	dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anon0f53a99e0503	file:	access:public
Clr	drw.h	/^typedef XftColor Clr;$/;"	t	typeref:typename:XftColor
ColBg	drw.h	/^enum { ColFg, ColBg, ColBorder }; \/* Clr scheme index *\/$/;"	e	enum:__anon0f5116480203	access:public
ColBorder	drw.h	/^enum { ColFg, ColBg, ColBorder }; \/* Clr scheme index *\/$/;"	e	enum:__anon0f5116480203	access:public
ColFg	drw.h	/^enum { ColFg, ColBg, ColBorder }; \/* Clr scheme index *\/$/;"	e	enum:__anon0f5116480203	access:public
Cur	drw.h	/^} Cur;$/;"	t	typeref:struct:__anon0f5116480108
CurLast	dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon0f53a99e0103	file:	access:public
CurMove	dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon0f53a99e0103	file:	access:public
CurNormal	dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon0f53a99e0103	file:	access:public
CurResize	dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon0f53a99e0103	file:	access:public
DESCRIPTION	dwm.1	/^.SH DESCRIPTION$/;"	s	title:DWM
DWM	dwm.1	/^.TH DWM 1 dwm\\-VERSION$/;"	t
Drw	drw.h	/^} Drw;$/;"	t	typeref:struct:__anon0f5116480308
FREETYPEINC	config.mk	/^FREETYPEINC = \/usr\/include\/freetype2$/;"	m
FREETYPELIBS	config.mk	/^FREETYPELIBS = -lfontconfig -lXft$/;"	m
Fnt	drw.h	/^typedef struct Fnt {$/;"	s
Fnt	drw.h	/^} Fnt;$/;"	t	typeref:struct:Fnt
Fnt::dpy	drw.h	/^	Display *dpy;$/;"	m	struct:Fnt	typeref:typename:Display *	access:public
Fnt::h	drw.h	/^	unsigned int h;$/;"	m	struct:Fnt	typeref:typename:unsigned int	access:public
Fnt::next	drw.h	/^	struct Fnt *next;$/;"	m	struct:Fnt	typeref:struct:Fnt *	access:public
Fnt::pattern	drw.h	/^	FcPattern *pattern;$/;"	m	struct:Fnt	typeref:typename:FcPattern *	access:public
Fnt::xfont	drw.h	/^	XftFont *xfont;$/;"	m	struct:Fnt	typeref:typename:XftFont *	access:public
HEIGHT	dwm.c	/^#define HEIGHT(/;"	d	file:	signature:(X)
INCS	config.mk	/^INCS = -I${X11INC} -I${FREETYPEINC}$/;"	m
INTERSECT	dwm.c	/^#define INTERSECT(/;"	d	file:	signature:(x,y,w,h,m)
ISSUES	dwm.1	/^.SH ISSUES$/;"	s	title:DWM
ISVISIBLE	dwm.c	/^#define ISVISIBLE(/;"	d	file:	signature:(C)
Key	dwm.c	/^} Key;$/;"	t	typeref:struct:__anon0f53a99e0808	file:
LDFLAGS	config.mk	/^LDFLAGS  = ${LIBS}$/;"	m
LENGTH	dwm.c	/^#define LENGTH(/;"	d	file:	signature:(X)
LIBS	config.mk	/^LIBS = -L${X11LIB} -lX11 ${XINERAMALIBS} ${FREETYPELIBS} -lX11-xcb -lxcb -lxcb-res ${KVMLIB}$/;"	m
Layout	dwm.c	/^} Layout;$/;"	t	typeref:struct:__anon0f53a99e0908	file:
MANPREFIX	config.mk	/^MANPREFIX = ${PREFIX}\/share\/man$/;"	m
MAX	util.h	/^#define MAX(/;"	d	signature:(A,B)
MIN	util.h	/^#define MIN(/;"	d	signature:(A,B)
MODKEY	config.def.h	/^#define MODKEY /;"	d
MODKEY	config.h	/^#define MODKEY /;"	d
MOUSEMASK	dwm.c	/^#define MOUSEMASK /;"	d	file:
Monitor	dwm.c	/^struct Monitor {$/;"	s	file:
Monitor	dwm.c	/^typedef struct Monitor Monitor;$/;"	t	typeref:struct:Monitor	file:
Monitor::barwin	dwm.c	/^	Window barwin;$/;"	m	struct:Monitor	typeref:typename:Window	file:	access:public
Monitor::by	dwm.c	/^	int by;               \/* bar geometry *\/$/;"	m	struct:Monitor	typeref:typename:int	file:	access:public
Monitor::clients	dwm.c	/^	Client *clients;$/;"	m	struct:Monitor	typeref:typename:Client *	file:	access:public
Monitor::gappx	dwm.c	/^	int gappx;            \/* gaps between windows *\/$/;"	m	struct:Monitor	typeref:typename:int	file:	access:public
Monitor::lt	dwm.c	/^	const Layout *lt[2];$/;"	m	struct:Monitor	typeref:typename:const Layout * [2]	file:	access:public
Monitor::ltsymbol	dwm.c	/^	char ltsymbol[16];$/;"	m	struct:Monitor	typeref:typename:char[16]	file:	access:public
Monitor::mfact	dwm.c	/^	float mfact;$/;"	m	struct:Monitor	typeref:typename:float	file:	access:public
Monitor::mh	dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:	access:public
Monitor::mw	dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:	access:public
Monitor::mx	dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:	access:public
Monitor::my	dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:	access:public
Monitor::next	dwm.c	/^	Monitor *next;$/;"	m	struct:Monitor	typeref:typename:Monitor *	file:	access:public
Monitor::nmaster	dwm.c	/^	int nmaster;$/;"	m	struct:Monitor	typeref:typename:int	file:	access:public
Monitor::num	dwm.c	/^	int num;$/;"	m	struct:Monitor	typeref:typename:int	file:	access:public
Monitor::sel	dwm.c	/^	Client *sel;$/;"	m	struct:Monitor	typeref:typename:Client *	file:	access:public
Monitor::sellt	dwm.c	/^	unsigned int sellt;$/;"	m	struct:Monitor	typeref:typename:unsigned int	file:	access:public
Monitor::seltags	dwm.c	/^	unsigned int seltags;$/;"	m	struct:Monitor	typeref:typename:unsigned int	file:	access:public
Monitor::showbar	dwm.c	/^	int showbar;$/;"	m	struct:Monitor	typeref:typename:int	file:	access:public
Monitor::stack	dwm.c	/^	Client *stack;$/;"	m	struct:Monitor	typeref:typename:Client *	file:	access:public
Monitor::tagset	dwm.c	/^	unsigned int tagset[2];$/;"	m	struct:Monitor	typeref:typename:unsigned int[2]	file:	access:public
Monitor::topbar	dwm.c	/^	int topbar;$/;"	m	struct:Monitor	typeref:typename:int	file:	access:public
Monitor::wh	dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:	access:public
Monitor::ww	dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:	access:public
Monitor::wx	dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:	access:public
Monitor::wy	dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:	access:public
NAME	dwm.1	/^.SH NAME$/;"	s	title:DWM
NetActiveWindow	dwm.c	/^       NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon0f53a99e0303	file:	access:public
NetClientList	dwm.c	/^       NetWMWindowTypeDialog, NetClientList, NetLast }; \/* EWMH atoms *\/$/;"	e	enum:__anon0f53a99e0303	file:	access:public
NetLast	dwm.c	/^       NetWMWindowTypeDialog, NetClientList, NetLast }; \/* EWMH atoms *\/$/;"	e	enum:__anon0f53a99e0303	file:	access:public
NetSupported	dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon0f53a99e0303	file:	access:public
NetWMCheck	dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon0f53a99e0303	file:	access:public
NetWMFullscreen	dwm.c	/^       NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon0f53a99e0303	file:	access:public
NetWMName	dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon0f53a99e0303	file:	access:public
NetWMState	dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon0f53a99e0303	file:	access:public
NetWMWindowType	dwm.c	/^       NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon0f53a99e0303	file:	access:public
NetWMWindowTypeDialog	dwm.c	/^       NetWMWindowTypeDialog, NetClientList, NetLast }; \/* EWMH atoms *\/$/;"	e	enum:__anon0f53a99e0303	file:	access:public
NumTags	dwm.c	/^struct NumTags { char limitexceeded[LENGTH(tags) > 31 ? -1 : 1]; };$/;"	s	file:
NumTags::limitexceeded	dwm.c	/^struct NumTags { char limitexceeded[LENGTH(tags) > 31 ? -1 : 1]; };$/;"	m	struct:NumTags	typeref:typename:char[]	file:	access:public
OBJ	Makefile	/^OBJ = ${SRC:.c=.o}$/;"	m
OPTIONS	dwm.1	/^.SH OPTIONS$/;"	s	title:DWM
PREFIX	config.mk	/^PREFIX = \/usr\/local$/;"	m
Rule	dwm.c	/^} Rule;$/;"	t	typeref:struct:__anon0f53a99e0a08	file:
SEE	dwm.1	/^.SH SEE ALSO$/;"	s	title:DWM
SHCMD	config.def.h	/^#define SHCMD(/;"	d	signature:(cmd)
SHCMD	config.h	/^#define SHCMD(/;"	d	signature:(cmd)
SRC	Makefile	/^SRC = drw.c dwm.c util.c$/;"	m
SYNOPSIS	dwm.1	/^.SH SYNOPSIS$/;"	s	title:DWM
SchemeNorm	dwm.c	/^enum { SchemeNorm, SchemeSel }; \/* color schemes *\/$/;"	e	enum:__anon0f53a99e0203	file:	access:public
SchemeSel	dwm.c	/^enum { SchemeNorm, SchemeSel }; \/* color schemes *\/$/;"	e	enum:__anon0f53a99e0203	file:	access:public
TAGKEYS	config.def.h	/^#define TAGKEYS(/;"	d	signature:(KEY,TAG)
TAGKEYS	config.h	/^#define TAGKEYS(/;"	d	signature:(KEY,TAG)
TAGMASK	dwm.c	/^#define TAGMASK /;"	d	file:
TEXTW	dwm.c	/^#define TEXTW(/;"	d	file:	signature:(X)
USAGE	dwm.1	/^.SH USAGE$/;"	s	title:DWM
UTF_INVALID	drw.c	/^#define UTF_INVALID /;"	d	file:
UTF_SIZ	drw.c	/^#define UTF_SIZ /;"	d	file:
VERSION	config.mk	/^VERSION = 6.2$/;"	m
WIDTH	dwm.c	/^#define WIDTH(/;"	d	file:	signature:(X)
WMDelete	dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon0f53a99e0403	file:	access:public
WMLast	dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon0f53a99e0403	file:	access:public
WMProtocols	dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon0f53a99e0403	file:	access:public
WMState	dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon0f53a99e0403	file:	access:public
WMTakeFocus	dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon0f53a99e0403	file:	access:public
X11INC	config.mk	/^X11INC = \/usr\/X11R6\/include$/;"	m
X11LIB	config.mk	/^X11LIB = \/usr\/X11R6\/lib$/;"	m
XINERAMAFLAGS	config.mk	/^XINERAMAFLAGS = -DXINERAMA$/;"	m
XINERAMALIBS	config.mk	/^XINERAMALIBS  = -lXinerama$/;"	m
__anon0f5116480108	drw.h	/^typedef struct {$/;"	s
__anon0f5116480108::cursor	drw.h	/^	Cursor cursor;$/;"	m	struct:__anon0f5116480108	typeref:typename:Cursor	access:public
__anon0f5116480203	drw.h	/^enum { ColFg, ColBg, ColBorder }; \/* Clr scheme index *\/$/;"	g
__anon0f5116480308	drw.h	/^typedef struct {$/;"	s
__anon0f5116480308::dpy	drw.h	/^	Display *dpy;$/;"	m	struct:__anon0f5116480308	typeref:typename:Display *	access:public
__anon0f5116480308::drawable	drw.h	/^	Drawable drawable;$/;"	m	struct:__anon0f5116480308	typeref:typename:Drawable	access:public
__anon0f5116480308::fonts	drw.h	/^	Fnt *fonts;$/;"	m	struct:__anon0f5116480308	typeref:typename:Fnt *	access:public
__anon0f5116480308::gc	drw.h	/^	GC gc;$/;"	m	struct:__anon0f5116480308	typeref:typename:GC	access:public
__anon0f5116480308::h	drw.h	/^	unsigned int w, h;$/;"	m	struct:__anon0f5116480308	typeref:typename:unsigned int	access:public
__anon0f5116480308::root	drw.h	/^	Window root;$/;"	m	struct:__anon0f5116480308	typeref:typename:Window	access:public
__anon0f5116480308::scheme	drw.h	/^	Clr *scheme;$/;"	m	struct:__anon0f5116480308	typeref:typename:Clr *	access:public
__anon0f5116480308::screen	drw.h	/^	int screen;$/;"	m	struct:__anon0f5116480308	typeref:typename:int	access:public
__anon0f5116480308::w	drw.h	/^	unsigned int w, h;$/;"	m	struct:__anon0f5116480308	typeref:typename:unsigned int	access:public
__anon0f53a99e0103	dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	g	file:
__anon0f53a99e0203	dwm.c	/^enum { SchemeNorm, SchemeSel }; \/* color schemes *\/$/;"	g	file:
__anon0f53a99e0303	dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	g	file:
__anon0f53a99e0403	dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	g	file:
__anon0f53a99e0503	dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	g	file:
__anon0f53a99e060a	dwm.c	/^typedef union {$/;"	u	file:
__anon0f53a99e060a::f	dwm.c	/^	float f;$/;"	m	union:__anon0f53a99e060a	typeref:typename:float	file:	access:public
__anon0f53a99e060a::i	dwm.c	/^	int i;$/;"	m	union:__anon0f53a99e060a	typeref:typename:int	file:	access:public
__anon0f53a99e060a::ui	dwm.c	/^	unsigned int ui;$/;"	m	union:__anon0f53a99e060a	typeref:typename:unsigned int	file:	access:public
__anon0f53a99e060a::v	dwm.c	/^	const void *v;$/;"	m	union:__anon0f53a99e060a	typeref:typename:const void *	file:	access:public
__anon0f53a99e0708	dwm.c	/^typedef struct {$/;"	s	file:
__anon0f53a99e0708::arg	dwm.c	/^	const Arg arg;$/;"	m	struct:__anon0f53a99e0708	typeref:typename:const Arg	file:	access:public
__anon0f53a99e0708::button	dwm.c	/^	unsigned int button;$/;"	m	struct:__anon0f53a99e0708	typeref:typename:unsigned int	file:	access:public
__anon0f53a99e0708::click	dwm.c	/^	unsigned int click;$/;"	m	struct:__anon0f53a99e0708	typeref:typename:unsigned int	file:	access:public
__anon0f53a99e0708::func	dwm.c	/^	void (*func)(const Arg *arg);$/;"	m	struct:__anon0f53a99e0708	typeref:typename:void (*)(const Arg * arg)	file:	access:public
__anon0f53a99e0708::mask	dwm.c	/^	unsigned int mask;$/;"	m	struct:__anon0f53a99e0708	typeref:typename:unsigned int	file:	access:public
__anon0f53a99e0808	dwm.c	/^typedef struct {$/;"	s	file:
__anon0f53a99e0808::arg	dwm.c	/^	const Arg arg;$/;"	m	struct:__anon0f53a99e0808	typeref:typename:const Arg	file:	access:public
__anon0f53a99e0808::func	dwm.c	/^	void (*func)(const Arg *);$/;"	m	struct:__anon0f53a99e0808	typeref:typename:void (*)(const Arg *)	file:	access:public
__anon0f53a99e0808::keysym	dwm.c	/^	KeySym keysym;$/;"	m	struct:__anon0f53a99e0808	typeref:typename:KeySym	file:	access:public
__anon0f53a99e0808::mod	dwm.c	/^	unsigned int mod;$/;"	m	struct:__anon0f53a99e0808	typeref:typename:unsigned int	file:	access:public
__anon0f53a99e0908	dwm.c	/^typedef struct {$/;"	s	file:
__anon0f53a99e0908::arrange	dwm.c	/^	void (*arrange)(Monitor *);$/;"	m	struct:__anon0f53a99e0908	typeref:typename:void (*)(Monitor *)	file:	access:public
__anon0f53a99e0908::symbol	dwm.c	/^	const char *symbol;$/;"	m	struct:__anon0f53a99e0908	typeref:typename:const char *	file:	access:public
__anon0f53a99e0a08	dwm.c	/^typedef struct {$/;"	s	file:
__anon0f53a99e0a08::class	dwm.c	/^	const char *class;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:const char *	file:	access:public
__anon0f53a99e0a08::instance	dwm.c	/^	const char *instance;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:const char *	file:	access:public
__anon0f53a99e0a08::isfloating	dwm.c	/^	int isfloating;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:int	file:	access:public
__anon0f53a99e0a08::isterminal	dwm.c	/^	int isterminal;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:int	file:	access:public
__anon0f53a99e0a08::monitor	dwm.c	/^	int monitor;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:int	file:	access:public
__anon0f53a99e0a08::noswallow	dwm.c	/^	int noswallow;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:int	file:	access:public
__anon0f53a99e0a08::tags	dwm.c	/^	unsigned int tags;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:unsigned int	file:	access:public
__anon0f53a99e0a08::title	dwm.c	/^	const char *title;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:const char *	file:	access:public
a/config.def.h	patches/dwm-barpadding-20200720.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/dwm-centeredmaster-200160719.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/dwm-fullgaps-20200508.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/dwm-gaps-6.0.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/dwm-statuscmd-signal-6.2.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/swallow-20201211.diff	/^--- a\/config.def.h$/;"	m
a/config.mk	patches/swallow-20201211.diff	/^--- a\/config.mk$/;"	m
a/dwm.1	patches/dwm-fullgaps-20200508.diff	/^--- a\/dwm.1$/;"	m
a/dwm.c	patches/dwm-barpadding-20200720.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/dwm-centeredmaster-200160719.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/dwm-fullgaps-20200508.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/dwm-gaps-6.0.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/dwm-statuscmd-signal-6.2.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	patches/swallow-20201211.diff	/^--- a\/dwm.c$/;"	m
all	Makefile	/^all: options dwm$/;"	t
applyrules	dwm.c	/^applyrules(Client *c)$/;"	f	typeref:typename:void	signature:(Client * c)
applyrules	dwm.c	/^static void applyrules(Client *c);$/;"	p	typeref:typename:void	file:	signature:(Client * c)
applysizehints	dwm.c	/^applysizehints(Client *c, int *x, int *y, int *w, int *h, int interact)$/;"	f	typeref:typename:int	signature:(Client * c,int * x,int * y,int * w,int * h,int interact)
applysizehints	dwm.c	/^static int applysizehints(Client *c, int *x, int *y, int *w, int *h, int interact);$/;"	p	typeref:typename:int	file:	signature:(Client * c,int * x,int * y,int * w,int * h,int interact)
arg	dwm.c	/^	const Arg arg;$/;"	m	struct:__anon0f53a99e0708	typeref:typename:const Arg	file:	access:public
arg	dwm.c	/^	const Arg arg;$/;"	m	struct:__anon0f53a99e0808	typeref:typename:const Arg	file:	access:public
arrange	dwm.c	/^	void (*arrange)(Monitor *);$/;"	m	struct:__anon0f53a99e0908	typeref:typename:void (*)(Monitor *)	file:	access:public
arrange	dwm.c	/^arrange(Monitor *m)$/;"	f	typeref:typename:void	signature:(Monitor * m)
arrange	dwm.c	/^static void arrange(Monitor *m);$/;"	p	typeref:typename:void	file:	signature:(Monitor * m)
arrangemon	dwm.c	/^arrangemon(Monitor *m)$/;"	f	typeref:typename:void	signature:(Monitor * m)
arrangemon	dwm.c	/^static void arrangemon(Monitor *m);$/;"	p	typeref:typename:void	file:	signature:(Monitor * m)
attach	dwm.c	/^attach(Client *c)$/;"	f	typeref:typename:void	signature:(Client * c)
attach	dwm.c	/^static void attach(Client *c);$/;"	p	typeref:typename:void	file:	signature:(Client * c)
attachstack	dwm.c	/^attachstack(Client *c)$/;"	f	typeref:typename:void	signature:(Client * c)
attachstack	dwm.c	/^static void attachstack(Client *c);$/;"	p	typeref:typename:void	file:	signature:(Client * c)
barbg	config.def.h	/^static unsigned long barbg					= 0x070707;$/;"	v	typeref:typename:unsigned long
barbg	config.h	/^static unsigned long barbg					= 0x070707;$/;"	v	typeref:typename:unsigned long
barwin	dwm.c	/^	Window barwin;$/;"	m	struct:Monitor	typeref:typename:Window	file:	access:public
baseh	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
basew	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
bh	dwm.c	/^static int bh, blw = 0;      \/* bar geometry *\/$/;"	v	typeref:typename:int	file:
blw	dwm.c	/^static int bh, blw = 0;      \/* bar geometry *\/$/;"	v	typeref:typename:int	file:
borderpx	config.def.h	/^static const unsigned int borderpx  = 1;        \/* border pixel of windows *\/$/;"	v	typeref:typename:const unsigned int
borderpx	config.h	/^static const unsigned int borderpx  = 1;        \/* border pixel of windows *\/$/;"	v	typeref:typename:const unsigned int
bravecmd	config.def.h	/^static const char *bravecmd[] = { "qutebrowser", NULL };$/;"	v	typeref:typename:const char * []
bravecmd	config.h	/^static const char *bravecmd[] = { "qutebrowser", NULL };$/;"	v	typeref:typename:const char * []
broken	dwm.c	/^static const char broken[] = "broken";$/;"	v	typeref:typename:const char[]	file:
button	dwm.c	/^	unsigned int button;$/;"	m	struct:__anon0f53a99e0708	typeref:typename:unsigned int	file:	access:public
buttonpress	dwm.c	/^buttonpress(XEvent *e)$/;"	f	typeref:typename:void	signature:(XEvent * e)
buttonpress	dwm.c	/^static void buttonpress(XEvent *e);$/;"	p	typeref:typename:void	file:	signature:(XEvent * e)
buttons	config.def.h	/^static Button buttons[] = {$/;"	v	typeref:typename:Button[]
buttons	config.h	/^static Button buttons[] = {$/;"	v	typeref:typename:Button[]
bw	dwm.c	/^	int bw, oldbw;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
by	dwm.c	/^	int by;               \/* bar geometry *\/$/;"	m	struct:Monitor	typeref:typename:int	file:	access:public
checkotherwm	dwm.c	/^checkotherwm(void)$/;"	f	typeref:typename:void	signature:(void)
checkotherwm	dwm.c	/^static void checkotherwm(void);$/;"	p	typeref:typename:void	file:	signature:(void)
class	dwm.c	/^	const char *class;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:const char *	file:	access:public
clean	Makefile	/^clean:$/;"	t
cleanup	dwm.c	/^cleanup(void)$/;"	f	typeref:typename:void	signature:(void)
cleanup	dwm.c	/^static void cleanup(void);$/;"	p	typeref:typename:void	file:	signature:(void)
cleanupmon	dwm.c	/^cleanupmon(Monitor *mon)$/;"	f	typeref:typename:void	signature:(Monitor * mon)
cleanupmon	dwm.c	/^static void cleanupmon(Monitor *mon);$/;"	p	typeref:typename:void	file:	signature:(Monitor * mon)
click	dwm.c	/^	unsigned int click;$/;"	m	struct:__anon0f53a99e0708	typeref:typename:unsigned int	file:	access:public
clientmessage	dwm.c	/^clientmessage(XEvent *e)$/;"	f	typeref:typename:void	signature:(XEvent * e)
clientmessage	dwm.c	/^static void clientmessage(XEvent *e);$/;"	p	typeref:typename:void	file:	signature:(XEvent * e)
clients	dwm.c	/^	Client *clients;$/;"	m	struct:Monitor	typeref:typename:Client *	file:	access:public
col_cyan	config.def.h	/^static const char col_cyan[]        = "#547f62";$/;"	v	typeref:typename:const char[]
col_cyan	config.h	/^static const char col_cyan[]        = "#547f62";$/;"	v	typeref:typename:const char[]
col_gray1	config.def.h	/^static const char col_gray1[]       = "#191919";$/;"	v	typeref:typename:const char[]
col_gray1	config.h	/^static const char col_gray1[]       = "#191919";$/;"	v	typeref:typename:const char[]
col_gray2	config.def.h	/^static const char col_gray2[]       = "#2c2c2c";$/;"	v	typeref:typename:const char[]
col_gray2	config.h	/^static const char col_gray2[]       = "#2c2c2c";$/;"	v	typeref:typename:const char[]
col_gray3	config.def.h	/^static const char col_gray3[]       = "#888888";$/;"	v	typeref:typename:const char[]
col_gray3	config.h	/^static const char col_gray3[]       = "#888888";$/;"	v	typeref:typename:const char[]
col_gray4	config.def.h	/^static const char col_gray4[]       = "#ffffff";$/;"	v	typeref:typename:const char[]
col_gray4	config.h	/^static const char col_gray4[]       = "#ffffff";$/;"	v	typeref:typename:const char[]
colors	config.def.h	/^static const char *colors[][3]      = {$/;"	v	typeref:typename:const char * [][3]
colors	config.h	/^static const char *colors[][3]      = {$/;"	v	typeref:typename:const char * [][3]
config.h	Makefile	/^config.h:$/;"	t
configure	dwm.c	/^configure(Client *c)$/;"	f	typeref:typename:void	signature:(Client * c)
configure	dwm.c	/^static void configure(Client *c);$/;"	p	typeref:typename:void	file:	signature:(Client * c)
configurenotify	dwm.c	/^configurenotify(XEvent *e)$/;"	f	typeref:typename:void	signature:(XEvent * e)
configurenotify	dwm.c	/^static void configurenotify(XEvent *e);$/;"	p	typeref:typename:void	file:	signature:(XEvent * e)
configurerequest	dwm.c	/^configurerequest(XEvent *e)$/;"	f	typeref:typename:void	signature:(XEvent * e)
configurerequest	dwm.c	/^static void configurerequest(XEvent *e);$/;"	p	typeref:typename:void	file:	signature:(XEvent * e)
copyvalidchars	dwm.c	/^copyvalidchars(char *text, char *rawtext)$/;"	f	typeref:typename:void	signature:(char * text,char * rawtext)
copyvalidchars	dwm.c	/^static void copyvalidchars(char *text, char *rawtext);$/;"	p	typeref:typename:void	file:	signature:(char * text,char * rawtext)
createmon	dwm.c	/^createmon(void)$/;"	f	typeref:typename:Monitor *	signature:(void)
createmon	dwm.c	/^static Monitor *createmon(void);$/;"	p	typeref:typename:Monitor *	file:	signature:(void)
ctrlcmd	config.def.h	/^static const char *ctrlcmd[] = { "smessage", NULL };$/;"	v	typeref:typename:const char * []
ctrlcmd	config.h	/^static const char *ctrlcmd[] = { "smessage", NULL };$/;"	v	typeref:typename:const char * []
cursor	drw.h	/^	Cursor cursor;$/;"	m	struct:__anon0f5116480108	typeref:typename:Cursor	access:public
cursor	dwm.c	/^static Cur *cursor[CurLast];$/;"	v	typeref:typename:Cur * []	file:
destroynotify	dwm.c	/^destroynotify(XEvent *e)$/;"	f	typeref:typename:void	signature:(XEvent * e)
destroynotify	dwm.c	/^static void destroynotify(XEvent *e);$/;"	p	typeref:typename:void	file:	signature:(XEvent * e)
detach	dwm.c	/^detach(Client *c)$/;"	f	typeref:typename:void	signature:(Client * c)
detach	dwm.c	/^static void detach(Client *c);$/;"	p	typeref:typename:void	file:	signature:(Client * c)
detachstack	dwm.c	/^detachstack(Client *c)$/;"	f	typeref:typename:void	signature:(Client * c)
detachstack	dwm.c	/^static void detachstack(Client *c);$/;"	p	typeref:typename:void	file:	signature:(Client * c)
die	util.c	/^die(const char *fmt, ...) {$/;"	f	typeref:typename:void	signature:(const char * fmt,...)
die	util.h	/^void die(const char *fmt, ...);$/;"	p	typeref:typename:void	signature:(const char * fmt,...)
dirtomon	dwm.c	/^dirtomon(int dir)$/;"	f	typeref:typename:Monitor *	signature:(int dir)
dirtomon	dwm.c	/^static Monitor *dirtomon(int dir);$/;"	p	typeref:typename:Monitor *	file:	signature:(int dir)
dist	Makefile	/^dist: clean$/;"	t
dmenucmd	config.def.h	/^static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray/;"	v	typeref:typename:const char * []
dmenucmd	config.h	/^static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray/;"	v	typeref:typename:const char * []
dmenufont	config.def.h	/^static const char dmenufont[]       = "SauceCodePro Nerd Font:style=Regular:pixelsize=14:antiali/;"	v	typeref:typename:const char[]
dmenufont	config.h	/^static const char dmenufont[]       = "SauceCodePro Nerd Font:style=Regular:pixelsize=14:antiali/;"	v	typeref:typename:const char[]
dmenumon	config.def.h	/^static char dmenumon[2] = "0"; \/* component of dmenucmd, manipulated in spawn() *\/$/;"	v	typeref:typename:char[2]
dmenumon	config.h	/^static char dmenumon[2] = "0"; \/* component of dmenucmd, manipulated in spawn() *\/$/;"	v	typeref:typename:char[2]
dpy	drw.h	/^	Display *dpy;$/;"	m	struct:Fnt	typeref:typename:Display *	access:public
dpy	drw.h	/^	Display *dpy;$/;"	m	struct:__anon0f5116480308	typeref:typename:Display *	access:public
dpy	dwm.c	/^static Display *dpy;$/;"	v	typeref:typename:Display *	file:
drawable	drw.h	/^	Drawable drawable;$/;"	m	struct:__anon0f5116480308	typeref:typename:Drawable	access:public
drawbar	dwm.c	/^drawbar(Monitor *m)$/;"	f	typeref:typename:void	signature:(Monitor * m)
drawbar	dwm.c	/^static void drawbar(Monitor *m);$/;"	p	typeref:typename:void	file:	signature:(Monitor * m)
drawbars	dwm.c	/^drawbars(void)$/;"	f	typeref:typename:void	signature:(void)
drawbars	dwm.c	/^static void drawbars(void);$/;"	p	typeref:typename:void	file:	signature:(void)
drw	dwm.c	/^static Drw *drw;$/;"	v	typeref:typename:Drw *	file:
drw_arc	drw.c	/^drw_arc(Drw *drw, int x, int y, unsigned int d, long int a1, long int a2, int filled, int invert/;"	f	typeref:typename:void	signature:(Drw * drw,int x,int y,unsigned int d,long int a1,long int a2,int filled,int invert)
drw_arc	drw.h	/^void drw_arc(Drw *drw, int x, int y, unsigned int r, long int a1, long int a2, int filled, int i/;"	p	typeref:typename:void	signature:(Drw * drw,int x,int y,unsigned int r,long int a1,long int a2,int filled,int invert)
drw_clr_create	drw.c	/^drw_clr_create(Drw *drw, Clr *dest, const char *clrname)$/;"	f	typeref:typename:void	signature:(Drw * drw,Clr * dest,const char * clrname)
drw_clr_create	drw.h	/^void drw_clr_create(Drw *drw, Clr *dest, const char *clrname);$/;"	p	typeref:typename:void	signature:(Drw * drw,Clr * dest,const char * clrname)
drw_create	drw.c	/^drw_create(Display *dpy, int screen, Window root, unsigned int w, unsigned int h)$/;"	f	typeref:typename:Drw *	signature:(Display * dpy,int screen,Window root,unsigned int w,unsigned int h)
drw_create	drw.h	/^Drw *drw_create(Display *dpy, int screen, Window win, unsigned int w, unsigned int h);$/;"	p	typeref:typename:Drw *	signature:(Display * dpy,int screen,Window win,unsigned int w,unsigned int h)
drw_cur_create	drw.c	/^drw_cur_create(Drw *drw, int shape)$/;"	f	typeref:typename:Cur *	signature:(Drw * drw,int shape)
drw_cur_create	drw.h	/^Cur *drw_cur_create(Drw *drw, int shape);$/;"	p	typeref:typename:Cur *	signature:(Drw * drw,int shape)
drw_cur_free	drw.c	/^drw_cur_free(Drw *drw, Cur *cursor)$/;"	f	typeref:typename:void	signature:(Drw * drw,Cur * cursor)
drw_cur_free	drw.h	/^void drw_cur_free(Drw *drw, Cur *cursor);$/;"	p	typeref:typename:void	signature:(Drw * drw,Cur * cursor)
drw_font_getexts	drw.c	/^drw_font_getexts(Fnt *font, const char *text, unsigned int len, unsigned int *w, unsigned int *h/;"	f	typeref:typename:void	signature:(Fnt * font,const char * text,unsigned int len,unsigned int * w,unsigned int * h)
drw_font_getexts	drw.h	/^void drw_font_getexts(Fnt *font, const char *text, unsigned int len, unsigned int *w, unsigned i/;"	p	typeref:typename:void	signature:(Fnt * font,const char * text,unsigned int len,unsigned int * w,unsigned int * h)
drw_fontset_create	drw.c	/^drw_fontset_create(Drw* drw, const char *fonts[], size_t fontcount)$/;"	f	typeref:typename:Fnt *	signature:(Drw * drw,const char * fonts[],size_t fontcount)
drw_fontset_create	drw.h	/^Fnt *drw_fontset_create(Drw* drw, const char *fonts[], size_t fontcount);$/;"	p	typeref:typename:Fnt *	signature:(Drw * drw,const char * fonts[],size_t fontcount)
drw_fontset_free	drw.c	/^drw_fontset_free(Fnt *font)$/;"	f	typeref:typename:void	signature:(Fnt * font)
drw_fontset_free	drw.h	/^void drw_fontset_free(Fnt* set);$/;"	p	typeref:typename:void	signature:(Fnt * set)
drw_fontset_getwidth	drw.c	/^drw_fontset_getwidth(Drw *drw, const char *text)$/;"	f	typeref:typename:unsigned int	signature:(Drw * drw,const char * text)
drw_fontset_getwidth	drw.h	/^unsigned int drw_fontset_getwidth(Drw *drw, const char *text);$/;"	p	typeref:typename:unsigned int	signature:(Drw * drw,const char * text)
drw_free	drw.c	/^drw_free(Drw *drw)$/;"	f	typeref:typename:void	signature:(Drw * drw)
drw_free	drw.h	/^void drw_free(Drw *drw);$/;"	p	typeref:typename:void	signature:(Drw * drw)
drw_map	drw.c	/^drw_map(Drw *drw, Window win, int x, int y, unsigned int w, unsigned int h)$/;"	f	typeref:typename:void	signature:(Drw * drw,Window win,int x,int y,unsigned int w,unsigned int h)
drw_map	drw.h	/^void drw_map(Drw *drw, Window win, int x, int y, unsigned int w, unsigned int h);$/;"	p	typeref:typename:void	signature:(Drw * drw,Window win,int x,int y,unsigned int w,unsigned int h)
drw_rect	drw.c	/^drw_rect(Drw *drw, int x, int y, unsigned int w, unsigned int h, int filled, int invert)$/;"	f	typeref:typename:void	signature:(Drw * drw,int x,int y,unsigned int w,unsigned int h,int filled,int invert)
drw_rect	drw.h	/^void drw_rect(Drw *drw, int x, int y, unsigned int w, unsigned int h, int filled, int invert);$/;"	p	typeref:typename:void	signature:(Drw * drw,int x,int y,unsigned int w,unsigned int h,int filled,int invert)
drw_resize	drw.c	/^drw_resize(Drw *drw, unsigned int w, unsigned int h)$/;"	f	typeref:typename:void	signature:(Drw * drw,unsigned int w,unsigned int h)
drw_resize	drw.h	/^void drw_resize(Drw *drw, unsigned int w, unsigned int h);$/;"	p	typeref:typename:void	signature:(Drw * drw,unsigned int w,unsigned int h)
drw_scm_create	drw.c	/^drw_scm_create(Drw *drw, const char *clrnames[], size_t clrcount)$/;"	f	typeref:typename:Clr *	signature:(Drw * drw,const char * clrnames[],size_t clrcount)
drw_scm_create	drw.h	/^Clr *drw_scm_create(Drw *drw, const char *clrnames[], size_t clrcount);$/;"	p	typeref:typename:Clr *	signature:(Drw * drw,const char * clrnames[],size_t clrcount)
drw_setfontset	drw.c	/^drw_setfontset(Drw *drw, Fnt *set)$/;"	f	typeref:typename:void	signature:(Drw * drw,Fnt * set)
drw_setfontset	drw.h	/^void drw_setfontset(Drw *drw, Fnt *set);$/;"	p	typeref:typename:void	signature:(Drw * drw,Fnt * set)
drw_setscheme	drw.c	/^drw_setscheme(Drw *drw, Clr *scm)$/;"	f	typeref:typename:void	signature:(Drw * drw,Clr * scm)
drw_setscheme	drw.h	/^void drw_setscheme(Drw *drw, Clr *scm);$/;"	p	typeref:typename:void	signature:(Drw * drw,Clr * scm)
drw_text	drw.c	/^drw_text(Drw *drw, int x, int y, unsigned int w, unsigned int h, unsigned int lpad, const char */;"	f	typeref:typename:int	signature:(Drw * drw,int x,int y,unsigned int w,unsigned int h,unsigned int lpad,const char * text,int invert)
drw_text	drw.h	/^int drw_text(Drw *drw, int x, int y, unsigned int w, unsigned int h, unsigned int lpad, const ch/;"	p	typeref:typename:int	signature:(Drw * drw,int x,int y,unsigned int w,unsigned int h,unsigned int lpad,const char * text,int invert)
dwm	Makefile	/^dwm: ${OBJ}$/;"	t
dwmblockspid	dwm.c	/^pid_t dwmblockspid = 0;$/;"	v	typeref:typename:pid_t
dwmblockssig	dwm.c	/^static int dwmblockssig;$/;"	v	typeref:typename:int	file:
ecalloc	util.c	/^ecalloc(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *	signature:(size_t nmemb,size_t size)
ecalloc	util.h	/^void *ecalloc(size_t nmemb, size_t size);$/;"	p	typeref:typename:void *	signature:(size_t nmemb,size_t size)
enternotify	dwm.c	/^enternotify(XEvent *e)$/;"	f	typeref:typename:void	signature:(XEvent * e)
enternotify	dwm.c	/^static void enternotify(XEvent *e);$/;"	p	typeref:typename:void	file:	signature:(XEvent * e)
expose	dwm.c	/^expose(XEvent *e)$/;"	f	typeref:typename:void	signature:(XEvent * e)
expose	dwm.c	/^static void expose(XEvent *e);$/;"	p	typeref:typename:void	file:	signature:(XEvent * e)
f	dwm.c	/^	float f;$/;"	m	union:__anon0f53a99e060a	typeref:typename:float	file:	access:public
filescmd	config.def.h	/^static const char *filescmd[] = { "st", "sfm", NULL };$/;"	v	typeref:typename:const char * []
filescmd	config.h	/^static const char *filescmd[] = { "st", "sfm", NULL };$/;"	v	typeref:typename:const char * []
focus	dwm.c	/^focus(Client *c)$/;"	f	typeref:typename:void	signature:(Client * c)
focus	dwm.c	/^static void focus(Client *c);$/;"	p	typeref:typename:void	file:	signature:(Client * c)
focusin	dwm.c	/^focusin(XEvent *e)$/;"	f	typeref:typename:void	signature:(XEvent * e)
focusin	dwm.c	/^static void focusin(XEvent *e);$/;"	p	typeref:typename:void	file:	signature:(XEvent * e)
focusmon	dwm.c	/^focusmon(const Arg *arg)$/;"	f	typeref:typename:void	signature:(const Arg * arg)
focusmon	dwm.c	/^static void focusmon(const Arg *arg);$/;"	p	typeref:typename:void	file:	signature:(const Arg * arg)
focusstack	dwm.c	/^focusstack(const Arg *arg)$/;"	f	typeref:typename:void	signature:(const Arg * arg)
focusstack	dwm.c	/^static void focusstack(const Arg *arg);$/;"	p	typeref:typename:void	file:	signature:(const Arg * arg)
fonts	config.def.h	/^static const char *fonts[]          = { "SauceCodePro Nerd Font:style=Regular:pixelsize=14:antia/;"	v	typeref:typename:const char * []
fonts	config.h	/^static const char *fonts[]          = { "SauceCodePro Nerd Font:style=Regular:pixelsize=14:antia/;"	v	typeref:typename:const char * []
fonts	drw.h	/^	Fnt *fonts;$/;"	m	struct:__anon0f5116480308	typeref:typename:Fnt *	access:public
func	dwm.c	/^	void (*func)(const Arg *);$/;"	m	struct:__anon0f53a99e0808	typeref:typename:void (*)(const Arg *)	file:	access:public
func	dwm.c	/^	void (*func)(const Arg *arg);$/;"	m	struct:__anon0f53a99e0708	typeref:typename:void (*)(const Arg * arg)	file:	access:public
gappx	config.def.h	/^static const unsigned int gappx     = 10;        \/* gap pixel between windows *\/$/;"	v	typeref:typename:const unsigned int
gappx	config.h	/^static const unsigned int gappx     = 10;        \/* gap pixel between windows *\/$/;"	v	typeref:typename:const unsigned int
gappx	dwm.c	/^	int gappx;            \/* gaps between windows *\/$/;"	m	struct:Monitor	typeref:typename:int	file:	access:public
gc	drw.h	/^	GC gc;$/;"	m	struct:__anon0f5116480308	typeref:typename:GC	access:public
getatomprop	dwm.c	/^getatomprop(Client *c, Atom prop)$/;"	f	typeref:typename:Atom	signature:(Client * c,Atom prop)
getdwmblockspid	dwm.c	/^getdwmblockspid()$/;"	f	typeref:typename:int	signature:()
getdwmblockspid	dwm.c	/^static int getdwmblockspid();$/;"	p	typeref:typename:int	file:	signature:()
getparentprocess	dwm.c	/^getparentprocess(pid_t p)$/;"	f	typeref:typename:pid_t	signature:(pid_t p)
getparentprocess	dwm.c	/^static pid_t getparentprocess(pid_t p);$/;"	p	typeref:typename:pid_t	file:	signature:(pid_t p)
getrootptr	dwm.c	/^getrootptr(int *x, int *y)$/;"	f	typeref:typename:int	signature:(int * x,int * y)
getrootptr	dwm.c	/^static int getrootptr(int *x, int *y);$/;"	p	typeref:typename:int	file:	signature:(int * x,int * y)
getstate	dwm.c	/^getstate(Window w)$/;"	f	typeref:typename:long	signature:(Window w)
getstate	dwm.c	/^static long getstate(Window w);$/;"	p	typeref:typename:long	file:	signature:(Window w)
gettextprop	dwm.c	/^gettextprop(Window w, Atom atom, char *text, unsigned int size)$/;"	f	typeref:typename:int	signature:(Window w,Atom atom,char * text,unsigned int size)
gettextprop	dwm.c	/^static int gettextprop(Window w, Atom atom, char *text, unsigned int size);$/;"	p	typeref:typename:int	file:	signature:(Window w,Atom atom,char * text,unsigned int size)
grabbuttons	dwm.c	/^grabbuttons(Client *c, int focused)$/;"	f	typeref:typename:void	signature:(Client * c,int focused)
grabbuttons	dwm.c	/^static void grabbuttons(Client *c, int focused);$/;"	p	typeref:typename:void	file:	signature:(Client * c,int focused)
grabkeys	dwm.c	/^grabkeys(void)$/;"	f	typeref:typename:void	signature:(void)
grabkeys	dwm.c	/^static void grabkeys(void);$/;"	p	typeref:typename:void	file:	signature:(void)
h	drw.h	/^	unsigned int h;$/;"	m	struct:Fnt	typeref:typename:unsigned int	access:public
h	drw.h	/^	unsigned int w, h;$/;"	m	struct:__anon0f5116480308	typeref:typename:unsigned int	access:public
h	dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
handler	dwm.c	/^static void (*handler[LASTEvent]) (XEvent *) = {$/;"	v	typeref:typename:void (* [LASTEvent])(XEvent *)	file:
i	dwm.c	/^	int i;$/;"	m	union:__anon0f53a99e060a	typeref:typename:int	file:	access:public
inch	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
incnmaster	dwm.c	/^incnmaster(const Arg *arg)$/;"	f	typeref:typename:void	signature:(const Arg * arg)
incnmaster	dwm.c	/^static void incnmaster(const Arg *arg);$/;"	p	typeref:typename:void	file:	signature:(const Arg * arg)
incw	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
install	Makefile	/^install: all$/;"	t
instance	dwm.c	/^	const char *instance;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:const char *	file:	access:public
isdescprocess	dwm.c	/^isdescprocess(pid_t p, pid_t c)$/;"	f	typeref:typename:int	signature:(pid_t p,pid_t c)
isdescprocess	dwm.c	/^static int isdescprocess(pid_t p, pid_t c);$/;"	p	typeref:typename:int	file:	signature:(pid_t p,pid_t c)
isfixed	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
isfloating	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
isfloating	dwm.c	/^	int isfloating;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:int	file:	access:public
isfullscreen	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
isterminal	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
isterminal	dwm.c	/^	int isterminal;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:int	file:	access:public
isuniquegeom	dwm.c	/^isuniquegeom(XineramaScreenInfo *unique, size_t n, XineramaScreenInfo *info)$/;"	f	typeref:typename:int	file:	signature:(XineramaScreenInfo * unique,size_t n,XineramaScreenInfo * info)
isurgent	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
keypress	dwm.c	/^keypress(XEvent *e)$/;"	f	typeref:typename:void	signature:(XEvent * e)
keypress	dwm.c	/^static void keypress(XEvent *e);$/;"	p	typeref:typename:void	file:	signature:(XEvent * e)
keys	config.def.h	/^static Key keys[] = {$/;"	v	typeref:typename:Key[]
keys	config.h	/^static Key keys[] = {$/;"	v	typeref:typename:Key[]
keysym	dwm.c	/^	KeySym keysym;$/;"	m	struct:__anon0f53a99e0808	typeref:typename:KeySym	file:	access:public
killclient	dwm.c	/^killclient(const Arg *arg)$/;"	f	typeref:typename:void	signature:(const Arg * arg)
killclient	dwm.c	/^static void killclient(const Arg *arg);$/;"	p	typeref:typename:void	file:	signature:(const Arg * arg)
layouts	config.def.h	/^static const Layout layouts[] = {$/;"	v	typeref:typename:const Layout[]
layouts	config.h	/^static const Layout layouts[] = {$/;"	v	typeref:typename:const Layout[]
limitexceeded	dwm.c	/^struct NumTags { char limitexceeded[LENGTH(tags) > 31 ? -1 : 1]; };$/;"	m	struct:NumTags	typeref:typename:char[]	file:	access:public
lockscr	config.def.h	/^static const char *lockscr[] = { "slock", NULL };$/;"	v	typeref:typename:const char * []
lockscr	config.h	/^static const char *lockscr[] = { "slock", NULL };$/;"	v	typeref:typename:const char * []
lrpad	dwm.c	/^static int lrpad;            \/* sum of left and right padding for text *\/$/;"	v	typeref:typename:int	file:
lt	dwm.c	/^	const Layout *lt[2];$/;"	m	struct:Monitor	typeref:typename:const Layout * [2]	file:	access:public
ltsymbol	dwm.c	/^	char ltsymbol[16];$/;"	m	struct:Monitor	typeref:typename:char[16]	file:	access:public
mailcmd	config.def.h	/^static const char *mailcmd[] = { "st", "neomutt", NULL };$/;"	v	typeref:typename:const char * []
mailcmd	config.h	/^static const char *mailcmd[] = { "st", "neomutt", NULL };$/;"	v	typeref:typename:const char * []
main	dwm.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int	signature:(int argc,char * argv[])
main	transient.c	/^int main(void) {$/;"	f	typeref:typename:int	signature:(void)
manage	dwm.c	/^manage(Window w, XWindowAttributes *wa)$/;"	f	typeref:typename:void	signature:(Window w,XWindowAttributes * wa)
manage	dwm.c	/^static void manage(Window w, XWindowAttributes *wa);$/;"	p	typeref:typename:void	file:	signature:(Window w,XWindowAttributes * wa)
manuals	config.def.h	/^static const char *manuals[] = { "manuals", NULL };$/;"	v	typeref:typename:const char * []
manuals	config.h	/^static const char *manuals[] = { "manuals", NULL };$/;"	v	typeref:typename:const char * []
mappingnotify	dwm.c	/^mappingnotify(XEvent *e)$/;"	f	typeref:typename:void	signature:(XEvent * e)
mappingnotify	dwm.c	/^static void mappingnotify(XEvent *e);$/;"	p	typeref:typename:void	file:	signature:(XEvent * e)
maprequest	dwm.c	/^maprequest(XEvent *e)$/;"	f	typeref:typename:void	signature:(XEvent * e)
maprequest	dwm.c	/^static void maprequest(XEvent *e);$/;"	p	typeref:typename:void	file:	signature:(XEvent * e)
mask	dwm.c	/^	unsigned int mask;$/;"	m	struct:__anon0f53a99e0708	typeref:typename:unsigned int	file:	access:public
maxa	dwm.c	/^	float mina, maxa;$/;"	m	struct:Client	typeref:typename:float	file:	access:public
maxh	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
maxw	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
mfact	config.def.h	/^static const float mfact     = 0.55; \/* factor of master area size [0.05..0.95] *\/$/;"	v	typeref:typename:const float
mfact	config.h	/^static const float mfact     = 0.55; \/* factor of master area size [0.05..0.95] *\/$/;"	v	typeref:typename:const float
mfact	dwm.c	/^	float mfact;$/;"	m	struct:Monitor	typeref:typename:float	file:	access:public
mh	dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:	access:public
mina	dwm.c	/^	float mina, maxa;$/;"	m	struct:Client	typeref:typename:float	file:	access:public
minh	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
minw	dwm.c	/^	int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
mod	dwm.c	/^	unsigned int mod;$/;"	m	struct:__anon0f53a99e0808	typeref:typename:unsigned int	file:	access:public
mon	dwm.c	/^	Monitor *mon;$/;"	m	struct:Client	typeref:typename:Monitor *	file:	access:public
monitor	dwm.c	/^	int monitor;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:int	file:	access:public
monocle	dwm.c	/^monocle(Monitor *m)$/;"	f	typeref:typename:void	signature:(Monitor * m)
monocle	dwm.c	/^static void monocle(Monitor *m);$/;"	p	typeref:typename:void	file:	signature:(Monitor * m)
mons	dwm.c	/^static Monitor *mons, *selmon;$/;"	v	typeref:typename:Monitor *	file:
motionnotify	dwm.c	/^motionnotify(XEvent *e)$/;"	f	typeref:typename:void	signature:(XEvent * e)
motionnotify	dwm.c	/^static void motionnotify(XEvent *e);$/;"	p	typeref:typename:void	file:	signature:(XEvent * e)
movemouse	dwm.c	/^movemouse(const Arg *arg)$/;"	f	typeref:typename:void	signature:(const Arg * arg)
movemouse	dwm.c	/^static void movemouse(const Arg *arg);$/;"	p	typeref:typename:void	file:	signature:(const Arg * arg)
musiccmd	config.def.h	/^static const char *musiccmd[] = { "st", "cmus", NULL };$/;"	v	typeref:typename:const char * []
musiccmd	config.h	/^static const char *musiccmd[] = { "st", "cmus", NULL };$/;"	v	typeref:typename:const char * []
mw	dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:	access:public
mx	dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:	access:public
my	dwm.c	/^	int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:	access:public
name	dwm.c	/^	char name[256];$/;"	m	struct:Client	typeref:typename:char[256]	file:	access:public
netatom	dwm.c	/^static Atom wmatom[WMLast], netatom[NetLast];$/;"	v	typeref:typename:Atom[]	file:
neverfocus	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
next	drw.h	/^	struct Fnt *next;$/;"	m	struct:Fnt	typeref:struct:Fnt *	access:public
next	dwm.c	/^	Client *next;$/;"	m	struct:Client	typeref:typename:Client *	file:	access:public
next	dwm.c	/^	Monitor *next;$/;"	m	struct:Monitor	typeref:typename:Monitor *	file:	access:public
nexttiled	dwm.c	/^nexttiled(Client *c)$/;"	f	typeref:typename:Client *	signature:(Client * c)
nexttiled	dwm.c	/^static Client *nexttiled(Client *c);$/;"	p	typeref:typename:Client *	file:	signature:(Client * c)
nmaster	config.def.h	/^static const int nmaster     = 1;    \/* number of clients in master area *\/$/;"	v	typeref:typename:const int
nmaster	config.h	/^static const int nmaster     = 1;    \/* number of clients in master area *\/$/;"	v	typeref:typename:const int
nmaster	dwm.c	/^	int nmaster;$/;"	m	struct:Monitor	typeref:typename:int	file:	access:public
noswallow	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
noswallow	dwm.c	/^	int noswallow;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:int	file:	access:public
num	dwm.c	/^	int num;$/;"	m	struct:Monitor	typeref:typename:int	file:	access:public
numlockmask	dwm.c	/^static unsigned int numlockmask = 0;$/;"	v	typeref:typename:unsigned int	file:
oldbw	dwm.c	/^	int bw, oldbw;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
oldh	dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
oldstate	dwm.c	/^	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
oldw	dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
oldx	dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
oldy	dwm.c	/^	int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
options	Makefile	/^options:$/;"	t
passm	config.def.h	/^static const char *passm[] = { "passmenu", "--type", NULL };$/;"	v	typeref:typename:const char * []
passm	config.h	/^static const char *passm[] = { "passmenu", "--type", NULL };$/;"	v	typeref:typename:const char * []
pattern	drw.h	/^	FcPattern *pattern;$/;"	m	struct:Fnt	typeref:typename:FcPattern *	access:public
pid	dwm.c	/^	pid_t pid;$/;"	m	struct:Client	typeref:typename:pid_t	file:	access:public
pop	dwm.c	/^pop(Client *c)$/;"	f	typeref:typename:void	signature:(Client * c)
pop	dwm.c	/^static void pop(Client *);$/;"	p	typeref:typename:void	file:	signature:(Client *)
propertynotify	dwm.c	/^propertynotify(XEvent *e)$/;"	f	typeref:typename:void	signature:(XEvent * e)
propertynotify	dwm.c	/^static void propertynotify(XEvent *e);$/;"	p	typeref:typename:void	file:	signature:(XEvent * e)
quit	dwm.c	/^quit(const Arg *arg)$/;"	f	typeref:typename:void	signature:(const Arg * arg)
quit	dwm.c	/^static void quit(const Arg *arg);$/;"	p	typeref:typename:void	file:	signature:(const Arg * arg)
rawstext	dwm.c	/^static char rawstext[256];$/;"	v	typeref:typename:char[256]	file:
recttomon	dwm.c	/^recttomon(int x, int y, int w, int h)$/;"	f	typeref:typename:Monitor *	signature:(int x,int y,int w,int h)
recttomon	dwm.c	/^static Monitor *recttomon(int x, int y, int w, int h);$/;"	p	typeref:typename:Monitor *	file:	signature:(int x,int y,int w,int h)
resize	dwm.c	/^resize(Client *c, int x, int y, int w, int h, int interact)$/;"	f	typeref:typename:void	signature:(Client * c,int x,int y,int w,int h,int interact)
resize	dwm.c	/^static void resize(Client *c, int x, int y, int w, int h, int interact);$/;"	p	typeref:typename:void	file:	signature:(Client * c,int x,int y,int w,int h,int interact)
resizeclient	dwm.c	/^resizeclient(Client *c, int x, int y, int w, int h)$/;"	f	typeref:typename:void	signature:(Client * c,int x,int y,int w,int h)
resizeclient	dwm.c	/^static void resizeclient(Client *c, int x, int y, int w, int h);$/;"	p	typeref:typename:void	file:	signature:(Client * c,int x,int y,int w,int h)
resizehints	config.def.h	/^static const int resizehints = 1;    \/* 1 means respect size hints in tiled resizals *\/$/;"	v	typeref:typename:const int
resizehints	config.h	/^static const int resizehints = 1;    \/* 1 means respect size hints in tiled resizals *\/$/;"	v	typeref:typename:const int
resizemouse	dwm.c	/^resizemouse(const Arg *arg)$/;"	f	typeref:typename:void	signature:(const Arg * arg)
resizemouse	dwm.c	/^static void resizemouse(const Arg *arg);$/;"	p	typeref:typename:void	file:	signature:(const Arg * arg)
restack	dwm.c	/^restack(Monitor *m)$/;"	f	typeref:typename:void	signature:(Monitor * m)
restack	dwm.c	/^static void restack(Monitor *m);$/;"	p	typeref:typename:void	file:	signature:(Monitor * m)
root	drw.h	/^	Window root;$/;"	m	struct:__anon0f5116480308	typeref:typename:Window	access:public
root	dwm.c	/^static Window root, wmcheckwin;$/;"	v	typeref:typename:Window	file:
rules	config.def.h	/^static const Rule rules[] = {$/;"	v	typeref:typename:const Rule[]
rules	config.h	/^static const Rule rules[] = {$/;"	v	typeref:typename:const Rule[]
run	dwm.c	/^run(void)$/;"	f	typeref:typename:void	signature:(void)
run	dwm.c	/^static void run(void);$/;"	p	typeref:typename:void	file:	signature:(void)
running	dwm.c	/^static int running = 1;$/;"	v	typeref:typename:int	file:
sayit	config.def.h	/^static const char *sayit[] = { "say-clip", "de-DE", NULL };$/;"	v	typeref:typename:const char * []
sayit	config.h	/^static const char *sayit[] = { "say-clip", "de-DE", NULL };$/;"	v	typeref:typename:const char * []
scan	dwm.c	/^scan(void)$/;"	f	typeref:typename:void	signature:(void)
scan	dwm.c	/^static void scan(void);$/;"	p	typeref:typename:void	file:	signature:(void)
scheme	drw.h	/^	Clr *scheme;$/;"	m	struct:__anon0f5116480308	typeref:typename:Clr *	access:public
scheme	dwm.c	/^static Clr **scheme;$/;"	v	typeref:typename:Clr **	file:
screen	drw.h	/^	int screen;$/;"	m	struct:__anon0f5116480308	typeref:typename:int	access:public
screen	dwm.c	/^static int screen;$/;"	v	typeref:typename:int	file:
sel	dwm.c	/^	Client *sel;$/;"	m	struct:Monitor	typeref:typename:Client *	file:	access:public
sellt	dwm.c	/^	unsigned int sellt;$/;"	m	struct:Monitor	typeref:typename:unsigned int	file:	access:public
selmon	dwm.c	/^static Monitor *mons, *selmon;$/;"	v	typeref:typename:Monitor *	file:
seltags	dwm.c	/^	unsigned int seltags;$/;"	m	struct:Monitor	typeref:typename:unsigned int	file:	access:public
sendevent	dwm.c	/^sendevent(Client *c, Atom proto)$/;"	f	typeref:typename:int	signature:(Client * c,Atom proto)
sendevent	dwm.c	/^static int sendevent(Client *c, Atom proto);$/;"	p	typeref:typename:int	file:	signature:(Client * c,Atom proto)
sendmon	dwm.c	/^sendmon(Client *c, Monitor *m)$/;"	f	typeref:typename:void	signature:(Client * c,Monitor * m)
sendmon	dwm.c	/^static void sendmon(Client *c, Monitor *m);$/;"	p	typeref:typename:void	file:	signature:(Client * c,Monitor * m)
setclientstate	dwm.c	/^setclientstate(Client *c, long state)$/;"	f	typeref:typename:void	signature:(Client * c,long state)
setclientstate	dwm.c	/^static void setclientstate(Client *c, long state);$/;"	p	typeref:typename:void	file:	signature:(Client * c,long state)
setfocus	dwm.c	/^setfocus(Client *c)$/;"	f	typeref:typename:void	signature:(Client * c)
setfocus	dwm.c	/^static void setfocus(Client *c);$/;"	p	typeref:typename:void	file:	signature:(Client * c)
setfullscreen	dwm.c	/^setfullscreen(Client *c, int fullscreen)$/;"	f	typeref:typename:void	signature:(Client * c,int fullscreen)
setfullscreen	dwm.c	/^static void setfullscreen(Client *c, int fullscreen);$/;"	p	typeref:typename:void	file:	signature:(Client * c,int fullscreen)
setgaps	dwm.c	/^setgaps(const Arg *arg)$/;"	f	typeref:typename:void	signature:(const Arg * arg)
setgaps	dwm.c	/^static void setgaps(const Arg *arg);$/;"	p	typeref:typename:void	file:	signature:(const Arg * arg)
setlayout	dwm.c	/^setlayout(const Arg *arg)$/;"	f	typeref:typename:void	signature:(const Arg * arg)
setlayout	dwm.c	/^static void setlayout(const Arg *arg);$/;"	p	typeref:typename:void	file:	signature:(const Arg * arg)
setmfact	dwm.c	/^setmfact(const Arg *arg)$/;"	f	typeref:typename:void	signature:(const Arg * arg)
setmfact	dwm.c	/^static void setmfact(const Arg *arg);$/;"	p	typeref:typename:void	file:	signature:(const Arg * arg)
setup	dwm.c	/^setup(void)$/;"	f	typeref:typename:void	signature:(void)
setup	dwm.c	/^static void setup(void);$/;"	p	typeref:typename:void	file:	signature:(void)
seturgent	dwm.c	/^seturgent(Client *c, int urg)$/;"	f	typeref:typename:void	signature:(Client * c,int urg)
seturgent	dwm.c	/^static void seturgent(Client *c, int urg);$/;"	p	typeref:typename:void	file:	signature:(Client * c,int urg)
sh	dwm.c	/^static int sw, sh;           \/* X display screen geometry width, height *\/$/;"	v	typeref:typename:int	file:
showbar	config.def.h	/^static const int showbar            = 1;        \/* 0 means no bar *\/$/;"	v	typeref:typename:const int
showbar	config.h	/^static const int showbar            = 1;        \/* 0 means no bar *\/$/;"	v	typeref:typename:const int
showbar	dwm.c	/^	int showbar;$/;"	m	struct:Monitor	typeref:typename:int	file:	access:public
showhide	dwm.c	/^showhide(Client *c)$/;"	f	typeref:typename:void	signature:(Client * c)
showhide	dwm.c	/^static void showhide(Client *c);$/;"	p	typeref:typename:void	file:	signature:(Client * c)
sidepad	config.def.h	/^static const int sidepad            = 10;$/;"	v	typeref:typename:const int
sidepad	config.h	/^static const int sidepad            = 10;$/;"	v	typeref:typename:const int
sigchld	dwm.c	/^sigchld(int unused)$/;"	f	typeref:typename:void	signature:(int unused)
sigchld	dwm.c	/^static void sigchld(int unused);$/;"	p	typeref:typename:void	file:	signature:(int unused)
sigdwmblocks	dwm.c	/^sigdwmblocks(const Arg *arg)$/;"	f	typeref:typename:void	signature:(const Arg * arg)
sigdwmblocks	dwm.c	/^static void sigdwmblocks(const Arg *arg);$/;"	p	typeref:typename:void	file:	signature:(const Arg * arg)
snap	config.def.h	/^static const unsigned int snap      = 32;       \/* snap pixel *\/$/;"	v	typeref:typename:const unsigned int
snap	config.h	/^static const unsigned int snap      = 32;       \/* snap pixel *\/$/;"	v	typeref:typename:const unsigned int
snext	dwm.c	/^	Client *snext;$/;"	m	struct:Client	typeref:typename:Client *	file:	access:public
sp	dwm.c	/^static int sp;               \/* side padding for bar *\/$/;"	v	typeref:typename:int	file:
spawn	dwm.c	/^spawn(const Arg *arg)$/;"	f	typeref:typename:void	signature:(const Arg * arg)
spawn	dwm.c	/^static void spawn(const Arg *arg);$/;"	p	typeref:typename:void	file:	signature:(const Arg * arg)
stack	dwm.c	/^	Client *stack;$/;"	m	struct:Monitor	typeref:typename:Client *	file:	access:public
stext	dwm.c	/^static char stext[256];$/;"	v	typeref:typename:char[256]	file:
sw	dwm.c	/^static int sw, sh;           \/* X display screen geometry width, height *\/$/;"	v	typeref:typename:int	file:
swallow	dwm.c	/^swallow(Client *p, Client *c)$/;"	f	typeref:typename:void	signature:(Client * p,Client * c)
swallowfloating	config.def.h	/^static const int swallowfloating    = 0;        \/* 1 means swallow floating windows by default /;"	v	typeref:typename:const int
swallowfloating	config.h	/^static const int swallowfloating    = 0;        \/* 1 means swallow floating windows by default /;"	v	typeref:typename:const int
swallowing	dwm.c	/^	Client *swallowing;$/;"	m	struct:Client	typeref:typename:Client *	file:	access:public
swallowingclient	dwm.c	/^static Client *swallowingclient(Window w);$/;"	p	typeref:typename:Client *	file:	signature:(Window w)
swallowingclient	dwm.c	/^swallowingclient(Window w)$/;"	f	typeref:typename:Client *	signature:(Window w)
symbol	dwm.c	/^	const char *symbol;$/;"	m	struct:__anon0f53a99e0908	typeref:typename:const char *	file:	access:public
tag	dwm.c	/^static void tag(const Arg *arg);$/;"	p	typeref:typename:void	file:	signature:(const Arg * arg)
tag	dwm.c	/^tag(const Arg *arg)$/;"	f	typeref:typename:void	signature:(const Arg * arg)
tagmon	dwm.c	/^static void tagmon(const Arg *arg);$/;"	p	typeref:typename:void	file:	signature:(const Arg * arg)
tagmon	dwm.c	/^tagmon(const Arg *arg)$/;"	f	typeref:typename:void	signature:(const Arg * arg)
tags	config.def.h	/^static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };$/;"	v	typeref:typename:const char * []
tags	config.h	/^static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };$/;"	v	typeref:typename:const char * []
tags	dwm.c	/^	unsigned int tags;$/;"	m	struct:Client	typeref:typename:unsigned int	file:	access:public
tags	dwm.c	/^	unsigned int tags;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:unsigned int	file:	access:public
tagset	dwm.c	/^	unsigned int tagset[2];$/;"	m	struct:Monitor	typeref:typename:unsigned int[2]	file:	access:public
termcmd	config.def.h	/^static const char *termcmd[]  = { "st", NULL };$/;"	v	typeref:typename:const char * []
termcmd	config.h	/^static const char *termcmd[]  = { "st", NULL };$/;"	v	typeref:typename:const char * []
termforwin	dwm.c	/^static Client *termforwin(const Client *c);$/;"	p	typeref:typename:Client *	file:	signature:(const Client * c)
termforwin	dwm.c	/^termforwin(const Client *w)$/;"	f	typeref:typename:Client *	signature:(const Client * w)
tile	dwm.c	/^static void tile(Monitor *);$/;"	p	typeref:typename:void	file:	signature:(Monitor *)
tile	dwm.c	/^tile(Monitor *m)$/;"	f	typeref:typename:void	signature:(Monitor * m)
title	dwm.c	/^	const char *title;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:const char *	file:	access:public
togglebar	dwm.c	/^static void togglebar(const Arg *arg);$/;"	p	typeref:typename:void	file:	signature:(const Arg * arg)
togglebar	dwm.c	/^togglebar(const Arg *arg)$/;"	f	typeref:typename:void	signature:(const Arg * arg)
togglefloating	dwm.c	/^static void togglefloating(const Arg *arg);$/;"	p	typeref:typename:void	file:	signature:(const Arg * arg)
togglefloating	dwm.c	/^togglefloating(const Arg *arg)$/;"	f	typeref:typename:void	signature:(const Arg * arg)
toggletag	dwm.c	/^static void toggletag(const Arg *arg);$/;"	p	typeref:typename:void	file:	signature:(const Arg * arg)
toggletag	dwm.c	/^toggletag(const Arg *arg)$/;"	f	typeref:typename:void	signature:(const Arg * arg)
toggleview	dwm.c	/^static void toggleview(const Arg *arg);$/;"	p	typeref:typename:void	file:	signature:(const Arg * arg)
toggleview	dwm.c	/^toggleview(const Arg *arg)$/;"	f	typeref:typename:void	signature:(const Arg * arg)
topbar	config.def.h	/^static const int topbar             = 1;        \/* 0 means bottom bar *\/$/;"	v	typeref:typename:const int
topbar	config.h	/^static const int topbar             = 1;        \/* 0 means bottom bar *\/$/;"	v	typeref:typename:const int
topbar	dwm.c	/^	int topbar;$/;"	m	struct:Monitor	typeref:typename:int	file:	access:public
ui	dwm.c	/^	unsigned int ui;$/;"	m	union:__anon0f53a99e060a	typeref:typename:unsigned int	file:	access:public
unfocus	dwm.c	/^static void unfocus(Client *c, int setfocus);$/;"	p	typeref:typename:void	file:	signature:(Client * c,int setfocus)
unfocus	dwm.c	/^unfocus(Client *c, int setfocus)$/;"	f	typeref:typename:void	signature:(Client * c,int setfocus)
uninstall	Makefile	/^uninstall:$/;"	t
unmanage	dwm.c	/^static void unmanage(Client *c, int destroyed);$/;"	p	typeref:typename:void	file:	signature:(Client * c,int destroyed)
unmanage	dwm.c	/^unmanage(Client *c, int destroyed)$/;"	f	typeref:typename:void	signature:(Client * c,int destroyed)
unmapnotify	dwm.c	/^static void unmapnotify(XEvent *e);$/;"	p	typeref:typename:void	file:	signature:(XEvent * e)
unmapnotify	dwm.c	/^unmapnotify(XEvent *e)$/;"	f	typeref:typename:void	signature:(XEvent * e)
unswallow	dwm.c	/^unswallow(Client *c)$/;"	f	typeref:typename:void	signature:(Client * c)
updatebarpos	dwm.c	/^static void updatebarpos(Monitor *m);$/;"	p	typeref:typename:void	file:	signature:(Monitor * m)
updatebarpos	dwm.c	/^updatebarpos(Monitor *m)$/;"	f	typeref:typename:void	signature:(Monitor * m)
updatebars	dwm.c	/^static void updatebars(void);$/;"	p	typeref:typename:void	file:	signature:(void)
updatebars	dwm.c	/^updatebars(void)$/;"	f	typeref:typename:void	signature:(void)
updateclientlist	dwm.c	/^static void updateclientlist(void);$/;"	p	typeref:typename:void	file:	signature:(void)
updateclientlist	dwm.c	/^updateclientlist()$/;"	f	typeref:typename:void	signature:()
updategeom	dwm.c	/^static int updategeom(void);$/;"	p	typeref:typename:int	file:	signature:(void)
updategeom	dwm.c	/^updategeom(void)$/;"	f	typeref:typename:int	signature:(void)
updatenumlockmask	dwm.c	/^static void updatenumlockmask(void);$/;"	p	typeref:typename:void	file:	signature:(void)
updatenumlockmask	dwm.c	/^updatenumlockmask(void)$/;"	f	typeref:typename:void	signature:(void)
updatesizehints	dwm.c	/^static void updatesizehints(Client *c);$/;"	p	typeref:typename:void	file:	signature:(Client * c)
updatesizehints	dwm.c	/^updatesizehints(Client *c)$/;"	f	typeref:typename:void	signature:(Client * c)
updatestatus	dwm.c	/^static void updatestatus(void);$/;"	p	typeref:typename:void	file:	signature:(void)
updatestatus	dwm.c	/^updatestatus(void)$/;"	f	typeref:typename:void	signature:(void)
updatetitle	dwm.c	/^static void updatetitle(Client *c);$/;"	p	typeref:typename:void	file:	signature:(Client * c)
updatetitle	dwm.c	/^updatetitle(Client *c)$/;"	f	typeref:typename:void	signature:(Client * c)
updatewindowtype	dwm.c	/^static void updatewindowtype(Client *c);$/;"	p	typeref:typename:void	file:	signature:(Client * c)
updatewindowtype	dwm.c	/^updatewindowtype(Client *c)$/;"	f	typeref:typename:void	signature:(Client * c)
updatewmhints	dwm.c	/^static void updatewmhints(Client *c);$/;"	p	typeref:typename:void	file:	signature:(Client * c)
updatewmhints	dwm.c	/^updatewmhints(Client *c)$/;"	f	typeref:typename:void	signature:(Client * c)
utf8decode	drw.c	/^utf8decode(const char *c, long *u, size_t clen)$/;"	f	typeref:typename:size_t	file:	signature:(const char * c,long * u,size_t clen)
utf8decodebyte	drw.c	/^utf8decodebyte(const char c, size_t *i)$/;"	f	typeref:typename:long	file:	signature:(const char c,size_t * i)
utf8validate	drw.c	/^utf8validate(long *u, size_t i)$/;"	f	typeref:typename:size_t	file:	signature:(long * u,size_t i)
utfbyte	drw.c	/^static const unsigned char utfbyte[UTF_SIZ + 1] = {0x80,    0, 0xC0, 0xE0, 0xF0};$/;"	v	typeref:typename:const unsigned char[]	file:
utfmask	drw.c	/^static const unsigned char utfmask[UTF_SIZ + 1] = {0xC0, 0x80, 0xE0, 0xF0, 0xF8};$/;"	v	typeref:typename:const unsigned char[]	file:
utfmax	drw.c	/^static const long utfmax[UTF_SIZ + 1] = {0x10FFFF, 0x7F, 0x7FF, 0xFFFF, 0x10FFFF};$/;"	v	typeref:typename:const long[]	file:
utfmin	drw.c	/^static const long utfmin[UTF_SIZ + 1] = {       0,    0,  0x80,  0x800,  0x10000};$/;"	v	typeref:typename:const long[]	file:
v	dwm.c	/^	const void *v;$/;"	m	union:__anon0f53a99e060a	typeref:typename:const void *	file:	access:public
vertpad	config.def.h	/^static const int vertpad            = 10;$/;"	v	typeref:typename:const int
vertpad	config.h	/^static const int vertpad            = 10;$/;"	v	typeref:typename:const int
view	dwm.c	/^static void view(const Arg *arg);$/;"	p	typeref:typename:void	file:	signature:(const Arg * arg)
view	dwm.c	/^view(const Arg *arg)$/;"	f	typeref:typename:void	signature:(const Arg * arg)
vimcmd	config.def.h	/^static const char *vimcmd[] = { "st", "nvim", NULL };$/;"	v	typeref:typename:const char * []
vimcmd	config.h	/^static const char *vimcmd[] = { "st", "nvim", NULL };$/;"	v	typeref:typename:const char * []
vp	dwm.c	/^static int vp;               \/* vertical padding for bar *\/$/;"	v	typeref:typename:int	file:
w	drw.h	/^	unsigned int w, h;$/;"	m	struct:__anon0f5116480308	typeref:typename:unsigned int	access:public
w	dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
w3m	config.def.h	/^static const char *w3m[] = { "st", "w3m", "-v", NULL };$/;"	v	typeref:typename:const char * []
w3m	config.h	/^static const char *w3m[] = { "st", "w3m", NULL };$/;"	v	typeref:typename:const char * []
wh	dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:	access:public
win	dwm.c	/^	Window win;$/;"	m	struct:Client	typeref:typename:Window	file:	access:public
winpid	dwm.c	/^static pid_t winpid(Window w);$/;"	p	typeref:typename:pid_t	file:	signature:(Window w)
winpid	dwm.c	/^winpid(Window w)$/;"	f	typeref:typename:pid_t	signature:(Window w)
wintoclient	dwm.c	/^static Client *wintoclient(Window w);$/;"	p	typeref:typename:Client *	file:	signature:(Window w)
wintoclient	dwm.c	/^wintoclient(Window w)$/;"	f	typeref:typename:Client *	signature:(Window w)
wintomon	dwm.c	/^static Monitor *wintomon(Window w);$/;"	p	typeref:typename:Monitor *	file:	signature:(Window w)
wintomon	dwm.c	/^wintomon(Window w)$/;"	f	typeref:typename:Monitor *	signature:(Window w)
wmatom	dwm.c	/^static Atom wmatom[WMLast], netatom[NetLast];$/;"	v	typeref:typename:Atom[]	file:
wmcheckwin	dwm.c	/^static Window root, wmcheckwin;$/;"	v	typeref:typename:Window	file:
ww	dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:	access:public
wx	dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:	access:public
wy	dwm.c	/^	int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:	access:public
x	dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
xcon	dwm.c	/^static xcb_connection_t *xcon;$/;"	v	typeref:typename:xcb_connection_t *	file:
xerror	dwm.c	/^static int xerror(Display *dpy, XErrorEvent *ee);$/;"	p	typeref:typename:int	file:	signature:(Display * dpy,XErrorEvent * ee)
xerror	dwm.c	/^xerror(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int	signature:(Display * dpy,XErrorEvent * ee)
xerrordummy	dwm.c	/^static int xerrordummy(Display *dpy, XErrorEvent *ee);$/;"	p	typeref:typename:int	file:	signature:(Display * dpy,XErrorEvent * ee)
xerrordummy	dwm.c	/^xerrordummy(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int	signature:(Display * dpy,XErrorEvent * ee)
xerrorstart	dwm.c	/^static int xerrorstart(Display *dpy, XErrorEvent *ee);$/;"	p	typeref:typename:int	file:	signature:(Display * dpy,XErrorEvent * ee)
xerrorstart	dwm.c	/^xerrorstart(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int	signature:(Display * dpy,XErrorEvent * ee)
xerrorxlib	dwm.c	/^static int (*xerrorxlib)(Display *, XErrorEvent *);$/;"	v	typeref:typename:int (*)(Display *,XErrorEvent *)	file:
xfont	drw.h	/^	XftFont *xfont;$/;"	m	struct:Fnt	typeref:typename:XftFont *	access:public
xfont_create	drw.c	/^xfont_create(Drw *drw, const char *fontname, FcPattern *fontpattern)$/;"	f	typeref:typename:Fnt *	file:	signature:(Drw * drw,const char * fontname,FcPattern * fontpattern)
xfont_free	drw.c	/^xfont_free(Fnt *font)$/;"	f	typeref:typename:void	file:	signature:(Fnt * font)
y	dwm.c	/^	int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:	access:public
zoom	dwm.c	/^static void zoom(const Arg *arg);$/;"	p	typeref:typename:void	file:	signature:(const Arg * arg)
zoom	dwm.c	/^zoom(const Arg *arg)$/;"	f	typeref:typename:void	signature:(const Arg * arg)
